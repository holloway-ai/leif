# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Pytest app

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: "3.10"
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
    steps:
    - name: Check out
      uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: setup poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: "1.4"
    - name: Setup cache
      uses: actions/cache@v1.2.1
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('poetry.lock') }}
    - name: Install dependencies
      run: |
        poetry install --with dev
    - name: Test with pytest
      env:
        COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
        OPENAI_API: ${{ secrets.OPENAI_API}}
      run: |
        docker-compose -f docker/docker-local-redis.yml up -d
        poetry run pytest --junitxml=tests/test-results.xml  --cov=app --cov-report=xml:coverage/cov-results.xml --cov-report=html:coverage/cov-results.html
        docker-compose -f docker/docker-local-redis.yml down
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2.7.0
      if: always()
      with:
        files: |
          tests/*.xml
        check_run_annotations: all tests
        job_summary: true
        compare_to_earlier_commit: true
        check_run_annotations_branch: main
    - name: Code Coverage Summary Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/cov-results.xml
        format: markdown
        output: both
        fail_below_min: false
        hide_complexity: true
    - name: Coverage comment
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        path: code-coverage-results.md